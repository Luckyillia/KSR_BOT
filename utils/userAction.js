const { Markup } = require('telegraf');
const fs = require('fs').promises;
const { sendCar } = require('./carFunctions');
let json = require('../data.json');


async function startHandler(ctx) {
  await ctx.reply(
    'üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∞—Ä–µ–Ω–¥–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π. üöó\n\n' +
    '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n' +
    '- –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏.\n' +
    '- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∞–≤—Ç–æ.\n' +
    '- –£–∑–Ω–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –æ –∫–∞–∂–¥–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.\n\n' +
    '–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è? –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:',
    Markup.keyboard([
      ['üöó –í—Å–µ –ê–≤—Ç–æ','üìÑ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ', 'üîç –§–∏–ª—å—Ç—Ä –ê–≤—Ç–æ']
    ]).resize()
  );
}

async function allCarsHandler(ctx,userCarIndex) {
  const userId = ctx.from.id;
  userCarIndex[userId] = 0; // –°–±—Ä–æ—Å –∏–Ω–¥–µ–∫—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log(ctx.from);
  await ctx.reply('–ó–¥–µ—Å—å –≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏:', Markup.removeKeyboard());

  await sendCar(ctx, userCarIndex[userId]);
}

async function filterCarsHandler(ctx, userStates) {
  await ctx.reply("üîç **–§–∏–ª—å—Ç—Ä –∞–≤—Ç–æ**", Markup.removeKeyboard());
  const filtr =  "üìã **–ü—Ä–∏–º–µ—Ä—ã**\n\n" +
    "üî§ –¢–æ–ª—å–∫–æ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –ø—Ä–∏–º–µ—Ä: (BMW)\n\n" +
    "üí∞ –¢–æ–ª—å–∫–æ –ø–æ —Ü–µ–Ω–µ –æ—Ç-–¥–æ –∏ –Ω–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –ø—Ä–∏–º–µ—Ä: (0-12.000 / (–¥–µ–Ω—å, –Ω–µ–¥–µ–ª—è, –º–µ—Å—è—Ü))\n\n" +
    "üîó –ò –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –ø–æ —Ü–µ–Ω–µ –ø—Ä–∏–º–µ—Ä: (BMW, 0-12.000 / (–¥–µ–Ω—å, –Ω–µ–¥–µ–ª—è, –º–µ—Å—è—Ü))\n\n" +
    "‚ÄºÔ∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ*: –¢—ã—Å—è—á–∏ –æ—Ç–¥–µ–ª—è—é—Ç—Å—è —Ç–æ—á–∫–æ–π.\n\n" +
    "‚úèÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ñ–∏–ª—å—Ç—Ä.";
  ctx.reply(filtr, Markup.inlineKeyboard([
    Markup.button.callback('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'go_to_main')
  ]));
  userStates[ctx.from.id] = 'filtr_car';
}

async function adminHandler(ctx,adminChatId,adminAssistantChatId) {
  if (adminChatId != ctx.from.id && adminAssistantChatId != ctx.from.id) {
    return ctx.reply("üö´ *–ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω.*\n\nüè† –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", Markup.keyboard([
      ['üöó –í—Å–µ –ê–≤—Ç–æ','üìÑ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ', 'üîç –§–∏–ª—å—Ç—Ä –ê–≤—Ç–æ']
    ]).resize());
  }
  await ctx.reply("üëÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", Markup.removeKeyboard());
  await ctx.reply("üìã *–°–ø–∏—Å–æ–∫ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –§—É–Ω–∫—Ü–∏–π*", {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üìÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ", callback_data: 'view_bookings' }],
        [{ text: "üöó –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏", callback_data: 'manage_cars' }],
        [{ text: "üìÑ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π", callback_data: 'list_car' }],
        [{ text: "‚¨ÖÔ∏è –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏", callback_data: 'go_to_main' }]
      ]
    }
  });
}

async function updateCarsData() {
  json = JSON.parse(await fs.readFile('./data.json', 'utf-8')); // –û–±–Ω–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
}

// –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
async function listCar(ctx) {
  await ctx.reply("üìÑ **–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ**", Markup.removeKeyboard());

  // –û–±–Ω–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å–ø–∏—Å–∫–∞
  await updateCarsData(); // –û–±–Ω–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ

  let list = '';
  json.map((car, idx) => {
    list += `${idx + 1} ${car.name}\n`;
  });

  ctx.reply(list, Markup.inlineKeyboard([
    Markup.button.callback('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'go_to_main')
  ]));
}

module.exports = {
  startHandler,
  allCarsHandler,
  filterCarsHandler,
  adminHandler,
  listCar
};